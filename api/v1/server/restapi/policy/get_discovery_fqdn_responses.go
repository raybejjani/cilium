// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/cilium/cilium/api/v1/models"
)

// GetDiscoveryFqdnOKCode is the HTTP code returned for type GetDiscoveryFqdnOK
const GetDiscoveryFqdnOKCode int = 200

/*GetDiscoveryFqdnOK Success

swagger:response getDiscoveryFqdnOK
*/
type GetDiscoveryFqdnOK struct {

	/*
	  In: Body
	*/
	Payload []*models.DNSLookup `json:"body,omitempty"`
}

// NewGetDiscoveryFqdnOK creates GetDiscoveryFqdnOK with default headers values
func NewGetDiscoveryFqdnOK() *GetDiscoveryFqdnOK {
	return &GetDiscoveryFqdnOK{}
}

// WithPayload adds the payload to the get discovery fqdn o k response
func (o *GetDiscoveryFqdnOK) WithPayload(payload []*models.DNSLookup) *GetDiscoveryFqdnOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get discovery fqdn o k response
func (o *GetDiscoveryFqdnOK) SetPayload(payload []*models.DNSLookup) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDiscoveryFqdnOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make([]*models.DNSLookup, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetDiscoveryFqdnBadRequestCode is the HTTP code returned for type GetDiscoveryFqdnBadRequest
const GetDiscoveryFqdnBadRequestCode int = 400

/*GetDiscoveryFqdnBadRequest Invalid request (error parsing parameters)

swagger:response getDiscoveryFqdnBadRequest
*/
type GetDiscoveryFqdnBadRequest struct {

	/*
	  In: Body
	*/
	Payload models.Error `json:"body,omitempty"`
}

// NewGetDiscoveryFqdnBadRequest creates GetDiscoveryFqdnBadRequest with default headers values
func NewGetDiscoveryFqdnBadRequest() *GetDiscoveryFqdnBadRequest {
	return &GetDiscoveryFqdnBadRequest{}
}

// WithPayload adds the payload to the get discovery fqdn bad request response
func (o *GetDiscoveryFqdnBadRequest) WithPayload(payload models.Error) *GetDiscoveryFqdnBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get discovery fqdn bad request response
func (o *GetDiscoveryFqdnBadRequest) SetPayload(payload models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDiscoveryFqdnBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetDiscoveryFqdnNotFoundCode is the HTTP code returned for type GetDiscoveryFqdnNotFound
const GetDiscoveryFqdnNotFoundCode int = 404

/*GetDiscoveryFqdnNotFound No DNS data with provided parameters found

swagger:response getDiscoveryFqdnNotFound
*/
type GetDiscoveryFqdnNotFound struct {
}

// NewGetDiscoveryFqdnNotFound creates GetDiscoveryFqdnNotFound with default headers values
func NewGetDiscoveryFqdnNotFound() *GetDiscoveryFqdnNotFound {
	return &GetDiscoveryFqdnNotFound{}
}

// WriteResponse to the client
func (o *GetDiscoveryFqdnNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
}
