// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/cilium/cilium/api/v1/models"
)

// GetDiscoveryFqdnReader is a Reader for the GetDiscoveryFqdn structure.
type GetDiscoveryFqdnReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDiscoveryFqdnReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetDiscoveryFqdnOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetDiscoveryFqdnBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetDiscoveryFqdnNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDiscoveryFqdnOK creates a GetDiscoveryFqdnOK with default headers values
func NewGetDiscoveryFqdnOK() *GetDiscoveryFqdnOK {
	return &GetDiscoveryFqdnOK{}
}

/*GetDiscoveryFqdnOK handles this case with default header values.

Success
*/
type GetDiscoveryFqdnOK struct {
	Payload []*models.DNSLookup
}

func (o *GetDiscoveryFqdnOK) Error() string {
	return fmt.Sprintf("[GET /discovery/fqdn][%d] getDiscoveryFqdnOK  %+v", 200, o.Payload)
}

func (o *GetDiscoveryFqdnOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDiscoveryFqdnBadRequest creates a GetDiscoveryFqdnBadRequest with default headers values
func NewGetDiscoveryFqdnBadRequest() *GetDiscoveryFqdnBadRequest {
	return &GetDiscoveryFqdnBadRequest{}
}

/*GetDiscoveryFqdnBadRequest handles this case with default header values.

Invalid request (error parsing parameters)
*/
type GetDiscoveryFqdnBadRequest struct {
	Payload models.Error
}

func (o *GetDiscoveryFqdnBadRequest) Error() string {
	return fmt.Sprintf("[GET /discovery/fqdn][%d] getDiscoveryFqdnBadRequest  %+v", 400, o.Payload)
}

func (o *GetDiscoveryFqdnBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDiscoveryFqdnNotFound creates a GetDiscoveryFqdnNotFound with default headers values
func NewGetDiscoveryFqdnNotFound() *GetDiscoveryFqdnNotFound {
	return &GetDiscoveryFqdnNotFound{}
}

/*GetDiscoveryFqdnNotFound handles this case with default header values.

No DNS data with provided parameters found
*/
type GetDiscoveryFqdnNotFound struct {
}

func (o *GetDiscoveryFqdnNotFound) Error() string {
	return fmt.Sprintf("[GET /discovery/fqdn][%d] getDiscoveryFqdnNotFound ", 404)
}

func (o *GetDiscoveryFqdnNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
